#include <iostream>
using namespace std;


void while_loop() {
    // вывести числа от 1 до 11 с шагом 3
    int c = 1;
    while (c < 11) {
        cout << c << endl;
        c += 3;
    }

    cout << "For loop" << endl;
    int k = 1;  // глобальная переменная (к ней можно получить доступ откуда угодно)
    for (; k < 11; ) {
        cout << k << endl;
        k += 3;
    }
}

void sum_of_digits() {
    int n;
    cout << "Insert n: ";
    cin >> n;
    cout << n << " = ";  // вывожу число, которое ввели
    // посчитать сумму цифр числа (123 = 1 + 2 + 3 = 6)
    int sum = 0;
    while (n > 0) {  // пока число n не стало нулем
        sum += n % 10;  // находить остаток от деления на 10 и добавлять в сумму (1234 % 10 = 4)
        n /= 10;  // делить число на 10 с присваиванием (1234 / 10 = 123)
    }
    cout << sum << endl;  // вывожу сумму цифр этого числа
}

void factorial() {
    // факториалом числа n называется произведение цифр этого числа от 1 до n включительно
    int n, factorial = 1;
    cout << "Insert n: ";
    cin >> n;
    for (int i = 1; i <= n; i++) {  // n = 3, i = 1, 2, 3
        factorial *= i;  // значения i последовательно перемножаются с factorial
    }
    cout << n << "! = " << factorial << endl;

    // решение через while
    // факториалом числа n называется произведение цифр этого числа от 1 до n включительно
    int k, factorial_ = 1;
    cout << "Insert k: ";
    cin >> k;
    int i = 1;
    while (i <= n) {  // n = 3, i = 1, 2, 3
        factorial_ *= i;  // значения i последовательно перемножаются с factorial
        i++;
    }
    cout << n << "! = " << factorial_;
}

void fib_nums() {
    int n, summ, i = 0, i1 = 0, i2 = 1;
    cout << "N = ";
    cin >> n;  // количество чисел в ряду Фибоначчи

    while (i < n) {
        // Ряд Фибоначчи - последовательность, в котороой каждый следующий элемент равен сумме двух предыдущих
        cout << i1 << ", ";  // начинаю с 0
        summ = i1 + i2;  // считаю сумму двух предыдущих элементов
        i++;  // i увеличиваю, чтобы вывести необходимое количество чисел
        i1 = i2;  // результат - получившееся число
        i2 = summ;  // присваиваем сумму двух предыдущих
    }
}

void reverse_num() {
    // развернуть число (3452 => 2543)
    int n, reversed, temp;
    cout << "N = ";
    cin >> n;
    reversed = 0;  // развернутое число
    while (n > 0) {
        temp = n % 10;  // сохраняю последнюю цифру числа в переменной
        reversed = reversed * 10 + temp;
        n /= 10;
    }
    cout << reversed << endl;
}

void unique_elements_of_array() {
    // наполнить массив уникальными значениями
    const int size = 10;
    int value;  // число, вводимое в массив
    int arr[size];

    for (int i = 0; i < size; i++) {  // повторить <длина_массива> раз
        cout << "Insert value of element " << i + 1;
        while (true) {  // повторять, пока не получим нужное значение
            cin >> value;  // пользователь ввел число
            bool in_array = false;  // статус "число есть в массиве" по умолчанию false
            for (int j = 0; j < i; j++) {  // просматриваю массив с 0 до индекса i
                if (value == arr[j]) {  // если введенное число совпадает с чем-то из массива
                    in_array = true;  // ставлю статус "число в массиве" true
                    break;  // принудительно выхожу из цикла
                }

            }
            if (in_array) {  // если число есть в массиве
                cout << value << " is in array already. Re-insert, pls: ";
            }
            else {
                break; // выйти из while
            }
        }
        arr[i] = value;  // если число уникальное, вводим его в массив
    }

    for (int i = 0; i < size; i++) {
        cout << arr[i] << ", ";
    }
}

void do_while() {
    int i = 12;
    // этот цикл не повторится ни разу
    while (i <= 11) {
        cout << i << endl;
        i++;
    }
    /** Цикл while сначала думает (проверяет условие),
     а потом делает (выполняет повторения). Но у него есть
     младший тупенький брат. Который сначала делает (выполняет повторения),
     а потом думает (проверяет условие) - do...while(); **/
    // этот цикл сделает одно повторение
    do {
        cout << i << endl;
        i++;
    } while (i <= 12);
}